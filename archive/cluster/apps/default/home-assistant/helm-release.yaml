---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app home-assistant
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    global:
      nameOverride: *app

    image:
      repository: homeassistant/home-assistant
      tag: 2023.4.1

    env:
      TZ: "${TIMEZONE}"
      PYTHONUSERBASE: /config/deps

    dnsPolicy: ClusterFirstWithHostNet

    service:
      main:
        ports:
          http:
            port: 8123

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        hosts:
          - host: "hassio.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: "${SECRET_DOMAIN/./-}-tls"

    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false

    persistence:
      config:
        enabled: true
        type: hostPath
        hostPath: /data/home-assistant
        mountPath: /config

    podAnnotations:
      k8s.v1.cni.cncf.io/networks: home-assistant-srv,home-assistant-iot

    addons:
      codeserver:
        enabled: true
        image:
          repository: ghcr.io/coder/code-server
          tag: 4.11.0
        env:
          TZ: "${TIMEZONE}"
        workingDir: "/config"
        args:
          - --auth
          - "none"
          - --user-data-dir
          - "/config/.vscode"
          - --extensions-dir
          - "/config/.vscode"
        ingress:
          enabled: true
          ingressClassName: "nginx"
          annotations:
            auth.home.arpa/enabled: "true"
          hosts:
            - host: "hassio-code.${SECRET_DOMAIN}"
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - secretName: "${SECRET_DOMAIN/./-}-tls"
        volumeMounts:
          - name: config
            mountPath: /config

      securityContext:
        fsGroup: 65534

    podSecurityContext:
      fsGroup: 65534
