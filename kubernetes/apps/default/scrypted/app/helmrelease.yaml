---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app scrypted
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
    image:
      repository: ghcr.io/koush/scrypted
      tag: 18-lunar-thin.s6-v0.28.1
    env:
      TZ: "${TIMEZONE}"
    service:
      main:
        ports:
          http:
            port: 11080
            primary: true
          mqtt:
            enabled: true
            port: 1883
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hajimari.io/icon: mdi:home-automation
        hosts:
          - host: &host scrypted.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-tls"
    persistence:
      config:
        enabled: true
        type: hostPath
        hostPath: /data/scrypted
        mountPath: /server/volume
      cache:
        enabled: true
        mountPath: /.npm
        type: emptyDir
    podAnnotations:
      k8s.v1.cni.cncf.io/networks: |
        [{
          "name":"multus-iot",
          "namespace": "network",
          "ips": ["10.1.3.152/24"]
        }]
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
    hostNetwork: true
    dnsPolicy: ClusterFirstWithHostNet
