---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 6.52.9
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  install:
    remediation:
      retries: 3
  interval: 5m0s
  values:
    deploymentStrategy:
      type: Recreate
    env:
      GF_EXPLORE_ENABLED: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_LOG_FILTERS: rendering:debug
      VAR_BLOCKY_URL: "http://blocky.networking.svc.cluster.local:4000"
    adminPassword: "${SECRET_GRAFANA_ADMIN_PASSWORD}"
    grafana.ini:
      auth.basic:
        disable_login_form: false
      auth.generic_oauth:
        enabled: false
        allow_sign_up: true
        name: Dex
        client_id: "${SECRET_OAUTH_GRAFANA_CLIENTID}"
        client_secret: "${SECRET_OAUTH_GRAFANA_CLIENTSECRET}"
        scopes: openid profile email groups
        auth_url: "https://dex.${SECRET_DOMAIN}/auth"
        token_url: "https://dex.${SECRET_DOMAIN}/token"
        api_url: "https://dex.${SECRET_DOMAIN}/userinfo"
      auth.generic_oauth.group_mapping:
        role_attribute_path: "contains(groups[*], '${SECRET_OAUTH_GITHUB_ORGANIZATION}:admins') && 'Admin' || contains(groups[*], '${SECRET_OAUTH_GITHUB_ORGANIZATION}:editors') && 'Editor' || 'Viewer'"
        org_id: 1
      server:
        root_url: "https://grafana.${SECRET_DOMAIN}"
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: false
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            url: http://prometheus-operated:9090
            access: proxy
            isDefault: true
    dashboards:
      default:
        # nginx-dashboard:
        #   url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
        #   datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11462
        cert-manager:
          url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/raw/master/dashboards/cert-manager.json
          datasource: Prometheus
        traefik:
          gnetId: 11462
          revision: 1
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11315
        unifi-client-insights:
          gnetId: 11315
          revision: 8
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11311
        unifi-network-sites:
          gnetId: 11311
          revision: 4
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11314
        unifi-uap-insights:
          gnetId: 11314
          revision: 9
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11312
        unifi-usw-insights:
          gnetId: 11312
          revision: 8
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/13665
        speedtest:
          gnetId: 13665
          revision: 1
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/control-plane.json
          datasource: Prometheus
        blocky:
          url: https://raw.githubusercontent.com/0xERR0R/blocky/v0.16/docs/blocky-grafana.json
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL
    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: "nginx"
      hosts:
        - "grafana.${SECRET_DOMAIN}"
      tls:
        - secretName: "${SECRET_DOMAIN/./-}-tls"
    serviceAccount:
      create: true
      autoMount: true
    persistence:
      enabled: false
